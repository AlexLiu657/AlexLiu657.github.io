{"meta":{"title":"莫语小栈","subtitle":"欢迎来到莫语小栈","description":"莫语小栈","author":"Alex Liu","url":"https://it65720.top","root":"/"},"pages":[{"title":"所有分类","date":"2022-04-24T17:08:02.247Z","updated":"2022-04-24T17:08:02.247Z","comments":true,"path":"categories/index.html","permalink":"https://it65720.top/categories/index.html","excerpt":"","text":""},{"title":"","date":"2022-05-17T16:41:44.078Z","updated":"2022-05-17T16:41:44.078Z","comments":false,"path":"about/index.html","permalink":"https://it65720.top/about/index.html","excerpt":"","text":"真的就是一个简单的自我介绍🤐，在搭建博客上花了太多时间，反而忽略了最重要的写博客QAQ，首先莫语是一种我对我自己的期望（不是摸鱼哦）,本人有时候做事比较毛躁,给自己起名莫语是希望自己能多思考,多实践,少说话。其次我是南京理工大学泰州科技学院2014级的学生,专业是软件工程,现在在从事软件开发相关的工作，现在主要技术栈是Java相关，前端对Vue，Angular等也有了解，后续准备对自己感兴趣的技术进行了解或者深入学习，同时也会在本站和大家进行分享😉。"},{"title":"","date":"2022-05-18T02:54:42.586Z","updated":"2022-05-18T02:54:42.586Z","comments":false,"path":"bb/index.html","permalink":"https://it65720.top/bb/index.html","excerpt":"","text":""},{"title":"","date":"2022-05-17T15:45:43.119Z","updated":"2022-05-17T15:45:43.119Z","comments":true,"path":"friends/index.html","permalink":"https://it65720.top/friends/index.html","excerpt":"走，去见网友","text":"走，去见网友 &nbsp;举个栗子&nbsp;前置要求 &nbsp;本站信息 友链格式，除高亮行必填，其余均可选填~- title: # 网站名称 url: # 访问地址 avatar: # 头像地址 description: # 描述/一句话概述/格言 screenshot: # 网站截图/展示图 backgroundColor: # 头像背景颜色 textColor: # 文本颜色 keywords: - 标签一 - 标签二 Https 站点（大势所趋） 网站加载速度正常（待定…） 免费类域名站点请略过（潜在的不可靠性） 新创站点请略过（建议拥有一定的原创内容） 不接受一切商业性或强烈侵入类广告之站点 不接受违反中华人民共和国法律法规之站点 访问地址：https://it65720.top 站点名称：莫语小栈 头像地址：https://bu.dusays.com/2022/04/19/98c06d5e34ebc.png 描述信息：望永不停止思考"},{"title":"","date":"2022-04-17T11:51:34.137Z","updated":"2022-04-17T11:51:34.137Z","comments":true,"path":"404.html","permalink":"https://it65720.top/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"所有标签","date":"2022-04-24T15:50:03.014Z","updated":"2022-04-24T15:50:03.014Z","comments":true,"path":"tags/index.html","permalink":"https://it65720.top/tags/index.html","excerpt":"","text":""},{"title":"","date":"2022-05-17T16:18:03.001Z","updated":"2022-05-17T16:18:03.001Z","comments":false,"path":"protocol/copyright/index.html","permalink":"https://it65720.top/protocol/copyright/index.html","excerpt":"","text":"版权协议 本站所有原创文章采用 CC BY-NC-SA 4.0 许可协议 创作人允许他人对自己享有著作权的作品或演绎作品进行转载、节选、混编、二次创作，但不得用于商业目的，且使用时须署名，须采用与本创作相同的协议进行授权。"},{"title":"","date":"2022-05-17T16:08:32.178Z","updated":"2022-05-17T16:08:32.178Z","comments":false,"path":"protocol/comment/index.html","permalink":"https://it65720.top/protocol/comment/index.html","excerpt":"","text":"评论服务协议 用户发言前，请认真阅读本条例。一经发言，即视为同意接受本条例；如不同意，请勿发言。 一、制定本管理办法的目的在于为用户提供文明、理性、友善、高质量的信息分享和公共讨论的网络交流空间。本网站所称的评论服务，是指通过运营网络互动传播技术平台，供用户对本网站传播的各类信息发表评论意见（包括但不限于语音、文字、图片、音频、视频等信息）的服务。 二、用户使用评论服务，不得逾越法律法规、社会主义制度、国家利益、公民合法权益、社会公共秩序、道德风尚和信息真实性“七条底线”；应尊重其他用户合法权益及公民个人隐私，尊重社会公序良俗，遵守国家法律法规。上文提及的国家法律法规，包括但不限于：《全国人民代表大会常务委员会关于维护互联网安全的决定》、《全国人民代表大会常务委员会关于加强网络信息保护的决定》、《最高人民法院最高人民检察院关于办理利用信息网络实施诽谤等刑事案件适用法律若干问题的解释》、《互联网信息服务管理办法》、《互联网新闻信息服务管理规定》以及《未成年人保护法》等。 三、用户应当按照规定使用真实信息使用本网站的评论服务。对注册用户发表的评论，本网站保留相应的管理权利。 四、用户在发表言论时，不得含有以下内容： ​ (一) 反对宪法确定的基本原则的； ​ (二) 危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的； ​ (三) 损害国家荣誉和利益的； ​ (四) 煽动民族仇恨、民族歧视，破坏民族团结的； ​ (五) 煽动地域歧视、地域仇恨的； ​ (六) 煽动非法集会、结社、游行、示威、聚众扰乱社会秩序的； ​ (七) 破坏国家宗教政策，宣扬邪教和迷信的； ​ (八) 侮辱和歧视性别、年龄、种族、出身、国别、性取向、生理缺陷的； ​ (九) 散布谣言，扰乱社会秩序、破坏社会稳定的； ​ (十) 散布淫秽、色情、赌博、暴力、凶杀、恐怖或者教唆犯罪的； ​ (十一) 侮辱或诽谤他人，侵害他人合法权益的； ​ (十二) 对他人进行暴力恐吓、威胁，实施人肉搜索的； ​ (十三) 未获得未满18周岁未成年人法定监护人的书面同意，传播该未成年人的隐私信息的； ​ (十四) 散布污言秽语，损坏社会公序良俗的； ​ (十五) 侵犯他人知识产权的； ​ (十六) 散布非法商业广告，或类似的商业招揽信息； ​ (十七) 使用本网站常用语言文字以外的其他语言文字评论的； ​ (十八) 与所评论的信息毫无关系的； ​ (十九) 所发表的信息毫无意义的，或刻意使用字符组合以逃避技术审核的； ​ (二十) 法律、法规和规章禁止传播的其他信息。 五、对违反上述承诺的用户，我们有权拒绝发布、删除评论、短期禁止发言直至永久关闭注册账号等管理措施。 六、若用户违反承诺、发布侵害第三人合法权益的信息而导致本网站被判决向被侵权人赔偿，我们保留依法向该用户追偿的权利。 七、本网站承诺，完善公众举报平台，欢迎用户监督举报各类不法传播活动和违法有害信息，以共同维护文明、有价值的评论环境，营造清朗的网络空间。"}],"posts":[{"title":"qwerqwerqwerqwbdfbyjrtyj","slug":"test11 copy","date":"2022-05-17T02:55:29.630Z","updated":"2022-05-03T14:23:05.648Z","comments":true,"path":"/20220517ad642b0f.html","link":"","permalink":"https://it65720.top/20220517ad642b0f.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类6","slug":"分类6","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB6/"}],"tags":[{"name":"测试11","slug":"测试11","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9511/"},{"name":"测试10","slug":"测试10","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9510/"}]},{"title":"岁的法国士大夫","slug":"test10","date":"2022-05-17T02:55:29.628Z","updated":"2022-05-03T14:23:05.649Z","comments":true,"path":"/20220517302ed772.html","link":"","permalink":"https://it65720.top/20220517302ed772.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类6","slug":"分类6","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB6/"}],"tags":[{"name":"测试11","slug":"测试11","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9511/"},{"name":"测试10","slug":"测试10","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9510/"}]},{"title":"岁的法国士大夫","slug":"test10 copy","date":"2022-05-17T02:55:29.626Z","updated":"2022-05-03T14:23:05.647Z","comments":true,"path":"/20220517302ed772.html","link":"","permalink":"https://it65720.top/20220517302ed772.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类6","slug":"分类6","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB6/"}],"tags":[{"name":"测试11","slug":"测试11","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9511/"},{"name":"测试10","slug":"测试10","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9510/"}]},{"title":"岁的法国士大夫","slug":"test9","date":"2022-05-17T02:55:29.623Z","updated":"2022-05-03T14:23:05.659Z","comments":true,"path":"/20220517302ed772.html","link":"","permalink":"https://it65720.top/20220517302ed772.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类5","slug":"分类5","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB5/"}],"tags":[{"name":"测试11","slug":"测试11","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9511/"},{"name":"测试10","slug":"测试10","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9510/"}]},{"title":"阿斯顿发生d","slug":"test8","date":"2022-05-17T02:55:29.620Z","updated":"2022-05-03T14:23:05.659Z","comments":true,"path":"/202205176868dff6.html","link":"","permalink":"https://it65720.top/202205176868dff6.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类5","slug":"分类5","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB5/"}],"tags":[{"name":"测试10","slug":"测试10","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9510/"},{"name":"测试9","slug":"测试9","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%959/"}]},{"title":"123123在S地方","slug":"test7","date":"2022-05-17T02:55:29.607Z","updated":"2022-05-03T14:23:05.658Z","comments":true,"path":"/202205177213a334.html","link":"","permalink":"https://it65720.top/202205177213a334.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类4","slug":"分类4","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB4/"}],"tags":[{"name":"测试8","slug":"测试8","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%958/"},{"name":"测试9","slug":"测试9","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%959/"}]},{"title":"士大夫山豆根圣公会","slug":"test6","date":"2022-05-17T02:55:29.605Z","updated":"2022-05-03T14:23:05.656Z","comments":true,"path":"/20220517d5d170ea.html","link":"","permalink":"https://it65720.top/20220517d5d170ea.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类4","slug":"分类4","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB4/"}],"tags":[{"name":"测试7","slug":"测试7","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%957/"},{"name":"测试8","slug":"测试8","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%958/"}]},{"title":"test12312312做事的风格","slug":"test5","date":"2022-05-17T02:55:29.602Z","updated":"2022-05-03T14:23:05.655Z","comments":true,"path":"/202205171bca5846.html","link":"","permalink":"https://it65720.top/202205171bca5846.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类3","slug":"分类3","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB3/"}],"tags":[{"name":"测试6","slug":"测试6","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%956/"},{"name":"测试7","slug":"测试7","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%957/"}]},{"title":"test4青奥会违法所得规划","slug":"test4","date":"2022-05-17T02:55:29.598Z","updated":"2022-05-03T14:23:05.654Z","comments":true,"path":"/2022051738378620.html","link":"","permalink":"https://it65720.top/2022051738378620.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类3","slug":"分类3","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB3/"}],"tags":[{"name":"测试5","slug":"测试5","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%955/"},{"name":"测试6","slug":"测试6","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%956/"}]},{"title":"test4567好地方","slug":"test3","date":"2022-05-17T02:55:29.596Z","updated":"2022-05-03T14:23:05.653Z","comments":true,"path":"/20220517dc799d98.html","link":"","permalink":"https://it65720.top/20220517dc799d98.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类2","slug":"分类2","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB2/"}],"tags":[{"name":"测试4","slug":"测试4","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%954/"},{"name":"测试5","slug":"测试5","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%955/"}]},{"title":"test4567","slug":"test2","date":"2022-05-17T02:55:29.593Z","updated":"2022-05-03T14:23:05.652Z","comments":true,"path":"/20220517791a66d6.html","link":"","permalink":"https://it65720.top/20220517791a66d6.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类2","slug":"分类2","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB2/"}],"tags":[{"name":"测试3","slug":"测试3","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%953/"},{"name":"测试4","slug":"测试4","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%954/"}]},{"title":"test657test","slug":"test1","date":"2022-05-17T02:55:29.591Z","updated":"2022-05-05T15:38:07.956Z","comments":true,"path":"/2022051786b8fc23.html","link":"","permalink":"https://it65720.top/2022051786b8fc23.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"分类1","slug":"分类1","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB1/"}],"tags":[{"name":"测试2","slug":"测试2","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%952/"},{"name":"测试3","slug":"测试3","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%953/"}]},{"title":"12312312312qdasfafafasfaef","slug":"test11","date":"2022-05-17T02:55:29.518Z","updated":"2022-05-17T16:52:49.414Z","comments":true,"path":"/202205171260b55f.html","link":"","permalink":"https://it65720.top/202205171260b55f.html","excerpt":"","text":"MyBatis作为一个优秀的持久层框架，目前在我的大多数日常学习和工作中被用来当作数据库Java访问数据库的一种方式，就像《塞尔达传说：旷野之息》之于NS的护航大作一样，我开篇博文准备写一下我所知的MyBatis，做一次学习笔记。😄 一、MyBatis初体验1.创建测试数据库下面是文章中的使用到的建表语句，本文采用的数据库是Mysql 8.0.27 123456789101112131415161718192021222324DROP TABLE IF EXISTS `user`;CREATE TABLE `user` ( `id` int(11) NOT NULL AUTO_INCREMENT, `username` varchar(50) DEFAULT NULL, `password` varchar(50) DEFAULT NULL, `birthday` varchar(50) DEFAULT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;INSERT INTO `user` VALUES (&#x27;1&#x27;, &#x27;alex&#x27;, &#x27;123&#x27;, &#x27;2019-12-12&#x27;);INSERT INTO `user` VALUES (&#x27;2&#x27;, &#x27;it65720&#x27;,&#x27;123&#x27;, &#x27;2019-12-12&#x27;);DROP TABLE IF EXISTS `orders`;CREATE TABLE `orders` ( `id` int(11) NOT NULL AUTO_INCREMENT, `ordertime` varchar(255) DEFAULT NULL, `total` double DEFAULT NULL, `uid` int(11) DEFAULT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;INSERT INTO `orders` VALUES (&#x27;1&#x27;, &#x27;2019-12-12&#x27;, &#x27;3000&#x27;, &#x27;1&#x27;);INSERT INTO `orders` VALUES (&#x27;2&#x27;, &#x27;2019-12-12&#x27;, &#x27;4000&#x27;, &#x27;1&#x27;);INSERT INTO `orders` VALUES (&#x27;3&#x27;, &#x27;2019-12-12&#x27;, &#x27;5000&#x27;, &#x27;2&#x27;); 2.导入依赖本文使用Maven进行构建 Mavenjar包pom.xml12345678910111213 &lt;!--mybatis--&gt;&lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis&lt;/artifactId&gt; &lt;version&gt;3.4.5&lt;/version&gt;&lt;/dependency&gt; &lt;!--mysql驱动--&gt;&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.17&lt;/version&gt; &lt;scope&gt;runtime&lt;/scope&gt;&lt;/dependency&gt;MyBatis的jar包下载：https://github.com/mybatis/mybatis-3/releasesMySQL数据库驱动下载：https://dev.mysql.com/downloads/connector/j/ 3.创建表对应的实体类12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849package com.alex.pojo;public class User &#123; private Integer id; private String username; private String password; private String birthday; public Integer getId() &#123; return id; &#125; public void setId(Integer id) &#123; this.id = id; &#125; public String getUsername() &#123; return username; &#125; public void setUsername(String username) &#123; this.username = username; &#125; public String getPassword() &#123; return password; &#125; public void setPassword(String password) &#123; this.password = password; &#125; public String getBirthday() &#123; return birthday; &#125; public void setBirthday(String birthday) &#123; this.birthday = birthday; &#125; @Override public String toString() &#123; return &quot;User&#123;&quot; + &quot;id=&quot; + id + &quot;, username=&#x27;&quot; + username + &#x27;\\&#x27;&#x27; + &quot;, password=&#x27;&quot; + password + &#x27;\\&#x27;&#x27; + &quot;, birthday=&#x27;&quot; + birthday + &#x27;\\&#x27;&#x27; + &#x27;&#125;&#x27;; &#125;&#125; 4.创建mybatis-config.xml主配置文件和数据库配置文件mybatis-config.xml123456789101112131415161718192021222324252627&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE configuration PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;&lt;configuration&gt; &lt;!-- 引入外部资源文件--&gt; &lt;properties resource=&quot;jdbc.properties&quot;/&gt; &lt;!-- 配置数据源环境 --&gt; &lt;environments default=&quot;development&quot;&gt; &lt;environment id=&quot;development&quot;&gt; &lt;!-- 数据库事务管理类型 --&gt; &lt;transactionManager type=&quot;JDBC&quot;/&gt; &lt;!-- 数据源，type=pooled 说明是使用连接池方式，可以节省资源 --&gt; &lt;dataSource type=&quot;POOLED&quot;&gt; &lt;!-- 调用资源文件里的用户信息--&gt; &lt;property name=&quot;driver&quot; value=&quot;$&#123;jdbc.driver&#125;&quot;/&gt; &lt;property name=&quot;url&quot; value=&quot;$&#123;jdbc.url&#125;&quot;/&gt; &lt;property name=&quot;username&quot; value=&quot;$&#123;jdbc.username&#125;&quot;/&gt; &lt;property name=&quot;password&quot; value=&quot;$&#123;jdbc.password&#125;&quot;/&gt; &lt;/dataSource&gt; &lt;/environment&gt; &lt;/environments&gt; &lt;!-- 加载映射文件 --&gt; &lt;mappers&gt; &lt;mapper resource=&quot;UserMapper.xml&quot;&gt;&lt;/mapper&gt; &lt;/mappers&gt;&lt;/configuration&gt; jdbc.properties1234jdbc.driver=com.mysql.cj.jdbc.Driverjdbc.url=jdbc:mysql://192.168.56.103:3306/mybatis?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghaijdbc.username=rootjdbc.password=root 5.创建XML映射文件UserMapper.xml1234567891011&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&lt;mapper namespace=&quot;User&quot;&gt; &lt;!--查询用户--&gt; &lt;select id=&quot;findAll&quot; resultType=&quot;com.alex.pojo.User&quot;&gt; select * from user &lt;/select&gt;&lt;/mapper&gt; 6.编写main方法进行测试12345678910public static void main(String[] args) throws IOException &#123; String resource = &quot;mybatis-config.xml&quot;; InputStream inputStream = Resources.getResourceAsStream(resource); SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream); SqlSession sqlSession = sqlSessionFactory.openSession(); List&lt;User&gt; list = sqlSession.selectList(&quot;User.findAll&quot;); for (User user : list) &#123; System.out.println(user); &#125;&#125; 上面的demo运行结束后，MyBatis将返回的结果集自动转换成对应的实体类，我理解的这个就是ORM（对象关系映射），但是上面的操作只是一个进行简单的MyBatis的配置的小例子，距离真正的实践还差很多，下面先来分析重要的配置文件之一，在测试代码段里面加载的文件mybatis-config.xml。 二、MyBatis的主配置文件MyBatis的配置文件包含了会影响 MyBatis 行为的设置和属性信息。 配置文档的顶层结构如下： properties settings typeAliases typeHandlers objectFactory plugins environments environment transactionManager dataSource databaseIdProvider mappers note warning MyBatis中的配置，不但有类型限制，还有顺序限制，必须按照上面树状结构的顺序进行配置。 1.properties（属性）标签中的数据可以在配置文件其他地方进行使用，使用${}可以获取对应的值，有两种配置的方式第一种就是在上面使用外部properties文件进行提供数据，第二种就是在properties中添加property子标签进行配置。 123456789&lt;!-- 引入外部资源文件--&gt;&lt;!--&lt;properties resource=&quot;jdbc.properties&quot;/&gt;--&gt;&lt;properties&gt; &lt;!-- property里面的属性全局均可使用 --&gt; &lt;property name=&quot;jdbc.driver&quot; value=&quot;com.mysql.cj.jdbc.Driver&quot;/&gt; &lt;property name=&quot;jdbc.url&quot; value=&quot;jdbc:mysql://192.168.56.103:3306/mybatis&quot;/&gt; &lt;property name=&quot;jdbc.username&quot; value=&quot;root&quot;/&gt; &lt;property name=&quot;jdbc.password&quot; value=&quot;root&quot;/&gt;&lt;/properties&gt; 2.settings（设置）settings配置影响MyBatiis框架在运行时的一些行为。settings配置缓存、延迟加载、结果集控制、执行器、分页设置、命名规则等一系列控制性参数。所有的setting配置都被包裹在settings标签对中。 设置名 描述 有效值 默认值 cacheEnabled 全局性地开启或关闭所有映射器配置文件中已配置的任何缓存。 true&#x2F;false true lazyLoadingEnabled 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。特定关联关系中可通过设置 fetchType 属性来覆盖该项的开关状态。 true&#x2F;false false aggressiveLazyLoading 开启时，任一方法的调用都会加载该对象的所有延迟加载属性。 否则，每个延迟加载属性会按需加载（参考 lazyLoadTriggerMethods)。 true&#x2F;false false multipleResultSetsEnabled 是否允许单个语句返回多结果集（需要数据库驱动支持）。 true&#x2F;false true useColumnLabel 使用列标签代替列名。实际表现依赖于数据库驱动，具体可参考数据库驱动的相关文档，或通过对比测试来观察。 true&#x2F;false true useGeneratedKeys 允许 JDBC 支持自动生成主键，需要数据库驱动支持。如果设置为 true，将强制使用自动生成主键。尽管一些数据库驱动不支持此特性，但仍可正常工作（如 Derby） true&#x2F;false False autoMappingBehavior 指定 MyBatis 应如何自动映射列到字段或属性。 NONE 表示关闭自动映射；PARTIAL 只会自动映射没有定义嵌套结果映射的字段。 FULL 会自动映射任何复杂的结果集（无论是否嵌套）。 NONEPARTIALFULL PARTIAL autoMappingUnknownColumnBehavior 指定发现自动映射目标未知列（或未知属性类型）的行为。NONE: 不做任何反应WARNING: 输出警告日志（’org.apache.ibatis.session.AutoMappingUnknownColumnBehavior’ 的日志等级必须设置为 WARN）FAILING: 映射失败 (抛出 SqlSessionException) NONEWARNINGFAILING NONE defaultExecutorType 配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（PreparedStatement）； BATCH 执行器不仅重用语句还会执行批量更新。 SIMPLEREUSEBATCH SIMPLE defaultStatementTimeout 设置超时时间，它决定数据库驱动等待数据库响应的秒数。 任意正整数 未设置 (null) defaultFetchSize 为驱动的结果集获取数量（fetchSize）设置一个建议值。此参数只可以在查询设置中被覆盖。 任意正整数 未设置 (null) defaultResultSetType 指定语句默认的滚动策略。（新增于 3.5.2） FORWARD_ONLYSCROLL_SENSITIVESCROLL_INSENSITIVEDEFAULT（等同于未设置） 未设置 (null) safeRowBoundsEnabled 是否允许在嵌套语句中使用分页（RowBounds）。如果允许使用则设置为 false。 true&#x2F;false False safeResultHandlerEnabled 是否允许在嵌套语句中使用结果处理器（ResultHandler）。如果允许使用则设置为 false。 true&#x2F;false True mapUnderscoreToCamelCase 是否开启驼峰命名自动映射，即从经典数据库列名 A_COLUMN 映射到经典 Java 属性名 aColumn。 true&#x2F;false False localCacheScope MyBatis 利用本地缓存机制（Local Cache）防止循环引用和加速重复的嵌套查询。 默认值为 SESSION，会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地缓存将仅用于执行语句，对相同 SqlSession 的不同查询将不会进行缓存。 SESSIONSTATEMENT SESSION jdbcTypeForNull 当没有为参数指定特定的 JDBC 类型时，空值的默认 JDBC 类型。 某些数据库驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER。 JdbcType 常量，常用值：NULL、VARCHAR 或 OTHER。 OTHER lazyLoadTriggerMethods 指定对象的哪些方法触发一次延迟加载。 用逗号分隔的方法列表。 equals,clone,hashCode,toString defaultScriptingLanguage 指定动态 SQL 生成使用的默认脚本语言。 一个类型别名或全限定类名。 org.apache.ibatis.scripting.xmltags.XMLLanguageDriver defaultEnumTypeHandler 指定 Enum 使用的默认 TypeHandler 。（新增于 3.4.5） 一个类型别名或全限定类名。 org.apache.ibatis.type.EnumTypeHandler callSettersOnNulls 指定当结果集中值为 null 的时候是否调用映射对象的 setter（map 对象时为 put）方法，这在依赖于 Map.keySet() 或 null 值进行初始化时比较有用。注意基本类型（int、boolean 等）是不能设置成 null 的。 true&#x2F;false false returnInstanceForEmptyRow 当返回行的所有列都是空时，MyBatis默认返回 null。 当开启这个设置时，MyBatis会返回一个空实例。 请注意，它也适用于嵌套的结果集（如集合或关联）。（新增于 3.4.2） true&#x2F;false false logPrefix 指定 MyBatis 增加到日志名称的前缀。 任何字符串 未设置 logImpl 指定 MyBatis 所用日志的具体实现，未指定时将自动查找。 SLF4JLOG4J(deprecated since 3.5.9)LOG4J2&#x2F;DK_LOGGINGCOMMONS_LOGGING STDOUT_LOGGINGNO_LOGGING 未设置 proxyFactory 指定 Mybatis 创建可延迟加载对象所用到的代理工具。 CGLIB&#x2F; JAVASSIST JAVASSIST （MyBatis 3.3 以上） vfsImpl 指定 VFS 的实现 自定义 VFS 的实现的类全限定名，以逗号分隔。 未设置 useActualParamName 允许使用方法签名中的名称作为语句参数名称。为了使用该特性，你的项目必须采用 Java 8 编译，并且加上 -parameters 选项。（新增于 3.4.1） true&#x2F;false true configurationFactory 指定一个提供 Configuration 实例的类。 这个被返回的 Configuration 实例用来加载被反序列化对象的延迟加载属性值。 这个类必须包含一个签名为static Configuration getConfiguration() 的方法。（新增于 3.2.3） 一个类型别名或完全限定类名。 未设置 settings 的配置项很多，但是真正用到的不会太多，很多都保持了默认，把常用的配置项研究清楚就可以了，比如关于缓存的 cacheEnabled，关于级联的 lazyLoadingEnabled 和 aggressiveLazy Loading，关于自动映射的 autoMappingBehavior 和 mapUnderscoreToCamelCase，关于执行器类型的 defaultExecutorType 等,本文暂时先讲一下基本的配置，后面想开篇深入研究一下Mybatis的缓存机制和级联的延迟加载。 这是一份比较完整的配置1234567891011121314151617&lt;settings&gt; &lt;setting name=&quot;cacheEnabled&quot; value=&quot;true&quot;/&gt; &lt;setting name=&quot;lazyLoadingEnabled&quot; value=&quot;true&quot;/&gt; &lt;setting name=&quot;multipleResultSetsEnabled&quot; value=&quot;true&quot;/&gt; &lt;setting name=&quot;useColumnLabel&quot; value=&quot;true&quot;/&gt; &lt;setting name=&quot;useGeneratedKeys&quot; value=&quot;false&quot;/&gt; &lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;PARTIAL&quot;/&gt; &lt;setting name=&quot;autoMappingUnknownColumnBehavior&quot; value=&quot;WARNING&quot;/&gt; &lt;setting name=&quot;defaultExecutorType&quot; value=&quot;SIMPLE&quot;/&gt; &lt;setting name=&quot;defaultStatementTimeout&quot; value=&quot;25&quot;/&gt; &lt;setting name=&quot;defaultFetchSize&quot; value=&quot;100&quot;/&gt; &lt;setting name=&quot;safeRowBoundsEnabled&quot; value=&quot;false&quot;/&gt; &lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;false&quot;/&gt; &lt;setting name=&quot;localCacheScope&quot; value=&quot;SESSION&quot;/&gt; &lt;setting name=&quot;jdbcTypeForNull&quot; value=&quot;OTHER&quot;/&gt; &lt;setting name=&quot;lazyLoadTriggerMethods&quot; value=&quot;equals,clone,hashCode,toString&quot;/&gt;&lt;/settings&gt; 3.typeAliases（类型别名）在上面demo中的的UserMapper.xml中配置的resultType为实体类的全类名，但是在使用过程中可以选择别名的方式代替代码中的全类型别名在XML中的配置主要有以下两种方式 对单个类进行起别名对整个包进行起别名123&lt;typeAliases&gt; &lt;typeAlias type=&quot;com.alex.pojo.User&quot; alias=&quot;UsEr&quot;&gt;&lt;/typeAlias&gt;&lt;/typeAliases&gt; 映射文件中使用，可以忽略大小写 Mapper.xml12345&lt;!--查询用户--&gt;&lt;select id=&quot;findAll&quot; resultType=&quot;UsER&quot;&gt; select * from user&lt;/select&gt;123&lt;typeAliases&gt; &lt;package name=&quot;com.alex.pojo&quot;&gt;&lt;/package&gt;&lt;/typeAliases&gt; 映射文件中使用，定义别名的规则就是对应包装类的类名，可以忽略大小写 Mapper.xml123&lt;select id=&quot;findAll&quot; resultType=&quot;user&quot;&gt; select * from user&lt;/select&gt; MyBatis已经为Java的常见类型默认指定了别名，可以直接使用。这里要注意的是，有一些基本数据类型和包装类数据类型的名称一样（除了包装类中首字母大写的类），故在基本数据类型的前面加上下划线“_”作为区分。 MyBatis中常见类型别名： 别名 映射的类型 _byte byte _long long _short short _int int _integer int _double double _float float _boolean boolean string String byte Byte long Long short Short int Integer integer Integer double Double float Float boolean Boolean date Date decimal BigDecimal bigdecimal BigDecimal object Object map Map hashmap HashMap list List arraylist ArrayList collection Collection iterator Iterator 4.typeHandlers（类型处理器）在MyBatis的映射配置文件中，在使用SQL往数据库输入数据的时候最终要从Java类型转换成数据库能识别的类型，而SQL从数据库的查询结果集中获取的数据，也要从数据库的数据类型转换为对应的Java类型。在MyBatis中，使用类型处理器（TypeHandler）将从数据库获取的值以合适的方式转换为Java类型，或者将Java类型的参数转换为数据库对应的类型。在MyBatis中已经有许多自带的类型处理器，但有时候也会满足不了开发的需求，这时候就需要配置自己的类型处理器了，typeHandlers标签就是用来声明自己的类型处理器的。 MyBatis提供默认的类型处理器： 类型处理器 Java 类型 JDBC 类型 BooleanTypeHandler java.lang.Boolean, boolean 数据库兼容的 BOOLEAN ByteTypeHandler java.lang.Byte, byte 数据库兼容的 NUMERIC 或 BYTE ShortTypeHandler java.lang.Short, short 数据库兼容的 NUMERIC 或 SMALLINT IntegerTypeHandler java.lang.Integer, int 数据库兼容的 NUMERIC 或 INTEGER LongTypeHandler java.lang.Long, long 数据库兼容的 NUMERIC 或 BIGINT FloatTypeHandler java.lang.Float, float 数据库兼容的 NUMERIC 或 FLOAT DoubleTypeHandler java.lang.Double, double 数据库兼容的 NUMERIC 或 DOUBLE BigDecimalTypeHandler java.math.BigDecimal 数据库兼容的 NUMERIC 或 DECIMAL StringTypeHandler java.lang.String CHAR, VARCHAR ClobReaderTypeHandler java.io.Reader - ClobTypeHandler java.lang.String CLOB, LONGVARCHAR NStringTypeHandler java.lang.String NVARCHAR, NCHAR NClobTypeHandler java.lang.String NCLOB BlobInputStreamTypeHandler java.io.InputStream - ByteArrayTypeHandler byte[] 数据库兼容的字节流类型 BlobTypeHandler byte[] BLOB, LONGVARBINARY DateTypeHandler java.util.Date TIMESTAMP DateOnlyTypeHandler java.util.Date DATE TimeOnlyTypeHandler java.util.Date TIME SqlTimestampTypeHandler java.sql.Timestamp TIMESTAMP SqlDateTypeHandler java.sql.Date DATE SqlTimeTypeHandler java.sql.Time TIME ObjectTypeHandler Any OTHER 或未指定类型 EnumTypeHandler Enumeration Type VARCHAR 或任何兼容的字符串类型，用来存储枚举的名称（而不是索引序数值） EnumOrdinalTypeHandler Enumeration Type 任何兼容的 NUMERIC 或 DOUBLE 类型，用来存储枚举的序数值（而不是名称）。 SqlxmlTypeHandler java.lang.String SQLXML InstantTypeHandler java.time.Instant TIMESTAMP LocalDateTimeTypeHandler java.time.LocalDateTime TIMESTAMP LocalDateTypeHandler java.time.LocalDate DATE LocalTimeTypeHandler java.time.LocalTime TIME OffsetDateTimeTypeHandler java.time.OffsetDateTime TIMESTAMP OffsetTimeTypeHandler java.time.OffsetTime TIME ZonedDateTimeTypeHandler java.time.ZonedDateTime TIMESTAMP YearTypeHandler java.time.Year INTEGER MonthTypeHandler java.time.Month INTEGER YearMonthTypeHandler java.time.YearMonth VARCHAR 或 LONGVARCHAR JapaneseDateTypeHandler java.time.chrono.JapaneseDate DATE 5、对象工厂（objectFactory）每次 MyBatis 创建结果对象的新实例时，它都会使用一个对象工厂（ObjectFactory）实例来完成实例化工作。 默认的对象工厂需要做的仅仅是实例化目标类，要么通过默认无参构造方法，要么通过存在的参数映射来调用带有参数的构造方法。 如果想覆盖对象工厂的默认行为，可以通过创建自己的对象工厂来实现。 6、插件（plugins）插件可以在映射语句执行过程中的某一点进行拦截调用，也可以通过重写方法对执行过程进行修改，可以用作日志记录、权限控制、缓存控制等。 MyBatis中的插件一定要慎用，如果使用不当回对返回结果以及执行过程产生影响，有可能会影响MyBatis的核心功能 7、环境配置（environments）MyBatis可以配置成适应多种环境，这种机制有助于将 SQL 映射应用于多种数据库之中， 现实情况下有多种理由需要这么做。 这里要注意的是尽管可以配置多个环境，每个 SqlSessionFactory 实例只能选择其一。也就是如果你想连接两个数据库，就需要创建两个 SqlSessionFactory 实例，每个数据库对应一个。而如果是三个数据库，就需要三个实例，可以使用下面两种方法进行实现。 为了指定创建哪种环境，只要将它作为可选的参数传递给 SqlSessionFactoryBuilder即可。 SqlSessionFactory factory = sqlSessionFactoryBuilder.build(reader, environment);SqlSessionFactory factory = sqlSessionFactoryBuilder.build(reader, environment,properties); 把上面的代码拿下来看一下 &lt;environments default=&quot;development&quot;&gt; &lt;environment id=&quot;development&quot;&gt; &lt;transactionManager type=&quot;JDBC&quot;&gt; &lt;property name=&quot;...&quot; value=&quot;...&quot;/&gt; &lt;/transactionManager&gt; &lt;dataSource type=&quot;POOLED&quot;&gt; &lt;property name=&quot;driver&quot; value=&quot;$&#123;driver&#125;&quot;/&gt; &lt;property name=&quot;url&quot; value=&quot;$&#123;url&#125;&quot;/&gt; &lt;property name=&quot;username&quot; value=&quot;$&#123;username&#125;&quot;/&gt; &lt;property name=&quot;password&quot; value=&quot;$&#123;password&#125;&quot;/&gt; &lt;/dataSource&gt; &lt;/environment&gt;&lt;/environments&gt; 这里可以看到有有四个关键的地方 default&#x3D;”development” 指定默认的环境 id&#x3D;”development” 指定环境的id，提供给上面的方法进行构造SqlSessionFactory使用 transactionManager 事务管理器的配置 dataSource 数据源的配置 下面主要讲一下transactionManager 和 dataSource transactionManager （事务管理器）在 MyBatis 中有两种类型的事务管理器（也就是 type&#x3D;”[JDBC|MANAGED]”）： JDBC – 这个配置就是直接使用了 JDBC 的提交和回滚设置，它依赖于从数据源得到的连接来管理事务范围。 MANAGED – 这个配置几乎没做什么。它从来不提交或回滚一个连接，而是让容器来管理事务的整个生命周期（比如 JEE 应用服务器的上下文）。 默认情况下它会关闭连接，然而一些容器并不希望这样，因此需要将 closeConnection 属性设置为 false 来阻止它默认的关闭行为。比如下面: &lt;transactionManager type=&quot;MANAGED&quot;&gt; &lt;property name=&quot;closeConnection&quot; value=&quot;false&quot;/&gt;&lt;/transactionManager&gt; 后期一般会使用Spring + MyBatis，则没有必要配置事务管理器， 因为 Spring 模块会使用自带的管理器来覆盖前面的配置。 dataSource（数据源）dataSource元素使用标准的JDBC数据源接口来配置JDBC连接对象的资源,有三种内建的数据源类型（也就是 type&#x3D;”[UNPOOLED|POOLED|JNDI]”）：UNPOOLED这个数据源的实现只是每次被请求时打开和关闭连接。虽然一点慢，它对在及时可用连接方面没有性能要求的简单应用程序是一个很好的选择。 不同的数据库在这方面表现也是不一样的，所以对某些数据库来说使用连接池并不重要，这个配置也是理想的。UNPOOLED 类型的数据源仅仅需要配置以下 5 种属性： driver – 这是 JDBC 驱动的 Java 类的完全限定名（并不是JDBC驱动中可能包含的数据源类）。 url – 这是数据库的 JDBC URL 地址。 username – 登录数据库的用户名。 password – 登录数据库的密码。 defaultTransactionIsolationLevel – 默认的连接事务隔离级别。作为可选项，你也可以传递属性给数据库驱动。要这样做，属性的前缀为”driver.”，例如：driver.encoding&#x3D;UTF8 POOLED这种数据源的实现利用”池”的概念将 JDBC 连接对象组织起来，避免了创建新的连接实例时所必需的初始化和认证时间。 这是一种使得并发 Web 应用快速响应请求的流行处理方式。除了上述提到 UNPOOLED 下的属性外，会有更多属性用来配置 POOLED 的数据源： poolMaximumActiveConnections – 在任意时间可以存在的活动（也就是正在使用）连接数量，默认值：10 poolMaximumIdleConnections – 任意时间可能存在的空闲连接数。 poolMaximumCheckoutTime – 在被强制返回之前，池中连接被检出（checked out）时间，默认值：20000 毫秒（即 20 秒） poolTimeToWait – 这是一个底层设置，如果获取连接花费的相当长的时间，它会给连接池打印状态日志并重新尝试获取一个连接（避免在误配置的情况下一直安静的失败），默认值：20000 毫秒（即 20 秒）。 poolPingQuery – 发送到数据库的侦测查询，用来检验连接是否处在正常工作秩序中并准备接受请求。默认是”NO PING QUERY SET”，这会导致多数数据库驱动失败时带有一个恰当的错误消息。 poolPingEnabled – 是否启用侦测查询。若开启，也必须使用一个可执行的 SQL 语句设置 poolPingQuery 属性（最好是一个非常快的 SQL），默认值：false。 poolPingConnectionsNotUsedFor – 配置 poolPingQuery 的使用频度。这可以被设置成匹配具体的数据库连接超时时间，来避免不必要的侦测，默认值：0（即所有连接每一时刻都被侦测 — 当然仅当 poolPingEnabled 为 true 时适用）。","categories":[{"name":"分类6","slug":"分类6","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB6/"}],"tags":[{"name":"测试11","slug":"测试11","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9511/"},{"name":"测试10","slug":"测试10","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9510/"}]}],"categories":[{"name":"分类6","slug":"分类6","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB6/"},{"name":"分类5","slug":"分类5","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB5/"},{"name":"分类4","slug":"分类4","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB4/"},{"name":"分类3","slug":"分类3","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB3/"},{"name":"分类2","slug":"分类2","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB2/"},{"name":"分类1","slug":"分类1","permalink":"https://it65720.top/categories/%E5%88%86%E7%B1%BB1/"}],"tags":[{"name":"测试11","slug":"测试11","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9511/"},{"name":"测试10","slug":"测试10","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%9510/"},{"name":"测试9","slug":"测试9","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%959/"},{"name":"测试8","slug":"测试8","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%958/"},{"name":"测试7","slug":"测试7","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%957/"},{"name":"测试6","slug":"测试6","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%956/"},{"name":"测试5","slug":"测试5","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%955/"},{"name":"测试4","slug":"测试4","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%954/"},{"name":"测试3","slug":"测试3","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%953/"},{"name":"测试2","slug":"测试2","permalink":"https://it65720.top/tags/%E6%B5%8B%E8%AF%952/"}]}